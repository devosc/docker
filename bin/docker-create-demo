#!/usr/bin/env bash

source docker-build-env

args=("$@")
build=""
docker_project_dir="$( cd "$(dirname "$0")/.." ; pwd -P )"
directory="${docker_project_dir}/www"
host="--host docker-project"
name="--name docker-project"

function usage()
{
    local dir="${docker_project_dir}"

    [[ "${dir}" = "${HOME}/docker" ]] && dir="~/docker"

    echo "Creates a demo application in the ${dir}/www directory.

Usage: docker-create-demo [--build] <application>

Application:
    cakephp           - CakePHP
    laravel           - Laravel
    mvc5              - Mvc5
    multisite-convert - Convert WordPress to a multisite network
    phpinfo           - PHP info
    symfony           - Symfony
    wordpress         - WordPress
Options:
    --build                         Build the image before starting the container.
    --host                          Project host name."
}

if [[ -z "${args[0]}" ]]; then
    usage
    exit 1
else
    for ((i=0; i < "$#"; ++i)); do
        case "${args[i]}" in
            cakephp|laravel|multisite-convert|mvc5|phpinfo|symfony|wordpress )      package="${args[i]}"
                                                                                    ;;
            --build )                                                               build="--build"
                                                                                    ;;
            --host )                                                                host="--host ${args[i+1]}"
                                                                                    unset "args[i]" "args[i+1]"
                                                                                    i=$(expr ${i} + 1)
                                                                                    ;;
            -h|--help )                                                             usage
                                                                                    exit
                                                                                    ;;
            * )                                                                     usage
                                                                                    exit 1
                                                                                    ;;
        esac
    done
fi

if [[ "multisite-convert" = "${package}" ]]; then
    docker-wp --project-directory "${docker_project_dir}" multisite-convert
else

    docker-down --project-directory ${docker_project_dir}

    cd ${directory}

    find . -type f -delete
    find . -type l -delete
    find . -type d -name '*' -delete

    docker-create-project ${host} ${build} ${name} ${host} ${package}
fi
