#!/usr/bin/env bash

source docker-build-env

build=""
cmd="php"
directory="$(pwd)"
name="php-docker-project-cli"
working_dir="/app"
tag="latest"
user="${USER_ID}:${GROUP_ID}"

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "Usage: docker-php [cmd] [options] [args...]
Commands:
    php
    php-config
    phpdbg
    phpize
    phar
Options:
    --build                     Build image from Dockerfile.
    --project-directory PATH    Alternative working directory, default is current directory."
    exit
fi

if [ "$1" = "" ] && [ -z "$2" ]; then
    cmd=""
else
    case "$1" in
        php|php-config|phpdbg|phpize|phar )    cmd="$1"
                                               shift
                                               ;;
    esac
fi

if [ "$1" = "--build" ]; then
    build="--build"
    shift
fi

if [ "$1" = "--project-directory" ]; then
    directory="$2"
    shift 2

    if [ "$1" = "--build" ]; then
        build="--build"
        shift
    fi
fi

image="${name}:${tag}"
volume="${directory}:${working_dir}"

if [ -n "$build" ] || [ "$(docker images -q ${image} 2> /dev/null)" == "" ]; then
    php_docker_dir="$( cd "$(dirname "$0")/.." ; pwd -P )"
    build_env_file="${php_docker_dir}/.build.env"
    dockerfile="${php_docker_dir}/service/php/Dockerfile"

    if [ -f "${php_docker_dir}/.build-cli.env" ]; then
        build_env_file="${php_docker_dir}/.build-cli.env"
    fi

    build_arg=""
    while read line ; do
        build_arg="${build_arg} --build-arg ${line/export /}"
    done < "${build_env_file}"

    docker build --no-cache ${build_arg} -t "${image}" -f "${dockerfile}" "${php_docker_dir}"
fi

docker run -it --rm --name "${name}" -v "${volume}" -w "${working_dir}" --user "${user}" "${image}" $cmd "$@"
