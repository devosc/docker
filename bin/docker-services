#!/usr/bin/env bash

source docker-build-env

if [ -z "$1" ] || [ "up" = "$1" ] || [ "down" = "$1" ]; then
    cd "$( cd "$(dirname "$0")" ; pwd -P )/.."
    ./services "$@"
else
    name="$( basename "$1" )"
    root="$( dirname "${BASH_SOURCE[0]}" )/.."
    local="$root/local/$name"
    service="$root/service/$name"

    if [ -f "$local.yml" ]; then
        file="$local.yml"
    elif [ -d "$local" ]; then
        file="$local/docker-compose.yml"
    elif [ -f "$service.yml" ]; then
        file="$service.yml"
    elif [ -d "$service" ]; then
        file="$service/docker-compose.yml"
    else
        echo -e "\x1B[1;31mService: $name not found\x1B[0m"
        exit 1
    fi

    if [ "down" = "$2" ]; then
        # remove images
        rmi=""
        if [ "--remove-images" = "$3" ]; then
            images=$(docker-compose --file $(pwd)/docker-compose.yml images -q)
            if [ "$images" != "" ]; then
                rmi="--rmi local"
            else
                echo -e "\x1B[1;31mNo images\x1B[0m"
            fi
            shift
        fi

        docker-compose --project-name $name --file $file down --remove-orphans $rmi
    else
        # build images before starting containers
        build=""
        if [ "--build" = "$3" ]; then
            build="$3";
        fi

        docker-compose --project-name $name --file $file up -d $build
    fi
fi
